
#if defined(__arm64__) && __arm64__ || (__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef NECONVERSATIONUIKIT_SWIFT_H
#define NECONVERSATIONUIKIT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import NEChatKit;
@import NECommonUIKit;
@import NIMSDK;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NEConversationUIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class NSNumber;

SWIFT_CLASS("_TtC19NEConversationUIKit17AtMEMessageRecord")
@interface AtMEMessageRecord : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, NSNumber *> * _Nonnull atMessages;
@property (nonatomic, strong) NSNumber * _Nullable lastTime;
@property (nonatomic) BOOL isRead;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19NEConversationUIKit14AtMessageModel")
@interface AtMessageModel : NSObject
@property (nonatomic, copy) NSString * _Nullable messageId;
@property (nonatomic, strong) NSNumber * _Nullable messageTime;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;
@class NSLayoutConstraint;
@class NEBasePopListViewController;
@protocol NEBaseConversationControllerDelegate;
@class NEBaseConversationListCell;
@class ConversationViewModel;
@class NSBundle;
@class NSCoder;
@class TabNavigationView;
@class UIView;
@class NEBrokenNetworkView;
@class NEEmptyDataView;
@class UITableView;

SWIFT_CLASS("_TtC19NEConversationUIKit28NEBaseConversationController")
@interface NEBaseConversationController : UIViewController <NIMChatManagerDelegate>
@property (nonatomic, strong) UIColor * _Nonnull deleteBottonBackgroundColor;
@property (nonatomic) double brokenNetworkViewHeight;
@property (nonatomic, strong) NSLayoutConstraint * _Nullable contentViewTopAnchor;
@property (nonatomic) CGFloat topConstant;
@property (nonatomic, strong) NEBasePopListViewController * _Nonnull popListController;
@property (nonatomic, strong) id <NEBaseConversationControllerDelegate> _Nullable delegate;
@property (nonatomic) CGFloat bodyTopViewHeight;
@property (nonatomic) CGFloat bodyBottomViewHeight;
@property (nonatomic, copy) NSDictionary<NSNumber *, SWIFT_METATYPE(NEBaseConversationListCell)> * _Nonnull cellRegisterDic;
@property (nonatomic, readonly, strong) ConversationViewModel * _Nonnull viewModel;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)showTitleBar;
- (void)setupSubviews;
- (void)initialConfig;
@property (nonatomic, strong) TabNavigationView * _Nonnull navigationView;
@property (nonatomic, strong) UIView * _Nonnull bodyTopView;
@property (nonatomic, strong) UIView * _Nonnull bodyView;
@property (nonatomic, strong) NEBrokenNetworkView * _Nonnull brokenNetworkView;
@property (nonatomic, strong) UIView * _Nonnull contentView;
@property (nonatomic, strong) NEEmptyDataView * _Nonnull emptyView;
@property (nonatomic, strong) UITableView * _Nonnull tableView;
@property (nonatomic, strong) UIView * _Nonnull bodyBottomView;
@end


SWIFT_CLASS("_TtC19NEConversationUIKit22ConversationController")
@interface ConversationController : NEBaseConversationController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)setupSubviews;
@end

@class NIMSession;
@class NIMStickTopSessionInfo;
@class ConversationListModel;
@class NIMMessage;
@class NEUserHeaderView;
@class RedAngleLabel;
@class UILabel;
@class UIImageView;

SWIFT_CLASS("_TtC19NEConversationUIKit26NEBaseConversationListCell")
@interface NEBaseConversationListCell : UITableViewCell
@property (nonatomic, copy) NSDictionary<NIMSession *, NIMStickTopSessionInfo *> * _Nonnull topStickInfos;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)setupSubviews;
- (void)configDataWithSessionModel:(ConversationListModel * _Nullable)sessionModel;
- (NSString * _Nonnull)contentForRecentSessionWithMessage:(NIMMessage * _Nonnull)message SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) NEUserHeaderView * _Nonnull headImge;
@property (nonatomic, strong) RedAngleLabel * _Nonnull redAngleView;
@property (nonatomic, strong) UILabel * _Nonnull title;
@property (nonatomic, strong) UILabel * _Nonnull subTitle;
@property (nonatomic, strong) UILabel * _Nonnull timeLabel;
@property (nonatomic, strong) UIImageView * _Nonnull notifyMsg;
@end


SWIFT_CLASS("_TtC19NEConversationUIKit20ConversationListCell")
@interface ConversationListCell : NEBaseConversationListCell
- (void)setupSubviews;
- (void)configDataWithSessionModel:(ConversationListModel * _Nullable)sessionModel;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// 会话列表页面的 UI 个性化定制
SWIFT_CLASS("_TtC19NEConversationUIKit22ConversationProperties")
@interface ConversationProperties : NSObject
/// 头像圆角大小
@property (nonatomic) double avatarCornerRadius;
/// 未被置顶的会话项的背景色
@property (nonatomic, strong) UIColor * _Nullable itemBackground;
/// 置顶的会话项的背景色
@property (nonatomic, strong) UIColor * _Nullable itemStickTopBackground;
@property (nonatomic) CGFloat itemTitleSize;
@property (nonatomic) CGFloat itemContentSize;
/// 时间字体大小
@property (nonatomic) CGFloat itemDateSize;
@property (nonatomic, strong) UIColor * _Nonnull itemTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull itemContentColor;
/// 会话时间的字体颜色
@property (nonatomic, strong) UIColor * _Nonnull itemDateColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19NEConversationUIKit18ConversationRouter")
@interface ConversationRouter : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface ConversationRouter (SWIFT_EXTENSION(NEConversationUIKit))
+ (void)registerFun;
@end


@interface ConversationRouter (SWIFT_EXTENSION(NEConversationUIKit))
+ (void)register;
@end

@class NENavigationView;

SWIFT_CLASS("_TtC19NEConversationUIKit38NEBaseConversationNavigationController")
@interface NEBaseConversationNavigationController : UIViewController <UIGestureRecognizerDelegate>
@property (nonatomic, readonly, strong) NENavigationView * _Nonnull navigationView;
@property (nonatomic, copy) NSString * _Nullable title;
- (void)viewDidLoad;
- (void)setupBackUI;
- (void)backEvent;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class SearchTextField;
@class NSIndexPath;

SWIFT_CLASS("_TtC19NEConversationUIKit34NEBaseConversationSearchController")
@interface NEBaseConversationSearchController : NEBaseConversationNavigationController <UITableViewDataSource, UITableViewDelegate>
- (void)viewDidLoad;
- (void)initialConfig;
- (void)setupSubviews;
- (void)searchTextFieldChangeWithTextfield:(SearchTextField * _Nonnull)textfield;
@property (nonatomic, strong) UITableView * _Nonnull tableView;
@property (nonatomic, strong) SearchTextField * _Nonnull searchTextField;
@property (nonatomic, strong) NEEmptyDataView * _Nonnull emptyView;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19NEConversationUIKit28ConversationSearchController")
@interface ConversationSearchController : NEBaseConversationSearchController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)setupSubviews;
@end


SWIFT_CLASS("_TtC19NEConversationUIKit27ConversationSearchViewModel")
@interface ConversationSearchViewModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;

SWIFT_CLASS("_TtC19NEConversationUIKit20ConversationUIConfig")
@interface ConversationUIConfig : NSObject
/// 是否展示界面顶部的标题栏
@property (nonatomic) BOOL showTitleBar;
/// 是否展示标题栏左侧图标
@property (nonatomic) BOOL showTitleBarLeftIcon;
/// 是否展示标题栏次最右侧图标
@property (nonatomic) BOOL showTitleBarRight2Icon;
/// 是否展示标题栏最右侧图标
@property (nonatomic) BOOL showTitleBarRightIcon;
/// 标题栏左侧图标
@property (nonatomic, strong) UIImage * _Nullable titleBarLeftRes;
/// 标题栏最右侧图标
@property (nonatomic, strong) UIImage * _Nullable titleBarRightRes;
/// 标题栏次最右侧图标
@property (nonatomic, strong) UIImage * _Nullable titleBarRight2Res;
/// 标题栏的文案
@property (nonatomic, copy) NSString * _Nullable titleBarTitle;
/// 标题栏的颜色值
@property (nonatomic, strong) UIColor * _Nullable titleBarTitleColor;
/// 会话列表页面的 UI 个性化定制
@property (nonatomic, strong) ConversationProperties * _Nonnull conversationProperties;
/// 会话列表 cell 左划置顶按钮文案内容
@property (nonatomic, copy) NSString * _Nonnull stickTopBottonTitle;
/// 会话列表 cell 左划取消置顶按钮文案内容(会话置顶后生效)
@property (nonatomic, copy) NSString * _Nonnull stickTopBottonCancelTitle;
/// 会话列表 cell 左划置顶按钮背景颜色
@property (nonatomic, strong) UIColor * _Nullable stickTopBottonBackgroundColor;
/// 会话列表 cell 左划置顶按钮点击事件
@property (nonatomic, copy) void (^ _Nullable stickTopBottonClick)(ConversationListModel * _Nullable, NSIndexPath * _Nonnull);
/// 会话列表 cell 左划删除按钮文案内容
@property (nonatomic, copy) NSString * _Nonnull deleteBottonTitle;
/// 会话列表 cell 左划删除按钮背景颜色
@property (nonatomic, strong) UIColor * _Nullable deleteBottonBackgroundColor;
/// 会话列表 cell 左划删除按钮点击事件
@property (nonatomic, copy) void (^ _Nullable deleteBottonClick)(ConversationListModel * _Nullable, NSIndexPath * _Nonnull);
/// 标题栏左侧按钮点击事件
@property (nonatomic, copy) void (^ _Nullable titleBarLeftClick)(void);
/// 标题栏最右侧按钮点击事件
@property (nonatomic, copy) void (^ _Nullable titleBarRightClick)(void);
/// 标题栏次最右侧按钮点击事件
@property (nonatomic, copy) void (^ _Nullable titleBarRight2Click)(void);
/// 会话列表点击事件
@property (nonatomic, copy) void (^ _Nullable itemClick)(ConversationListModel * _Nullable, NSIndexPath * _Nonnull);
/// 会话列表的视图控制器回调，回调中会返回会话列表的视图控制器
@property (nonatomic, copy) void (^ _Nullable customController)(NEBaseConversationController * _Nonnull);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol ConversationViewModelDelegate;
@class ConversationRepo;
@class NIMFetchServerSessionOption;
@class NSError;
@class NIMRecentSession;
@class NIMMessageReceipt;
@class NIMSyncStickTopSessionResponse;
@class NIMUser;
@class NIMTeam;

SWIFT_CLASS("_TtC19NEConversationUIKit21ConversationViewModel")
@interface ConversationViewModel : NSObject <ConversationRepoDelegate, NIMChatManagerDelegate, NIMConversationManagerDelegate, NIMTeamManagerDelegate, NIMUserManagerDelegate>
@property (nonatomic, copy) NSArray<ConversationListModel *> * _Nullable conversationListArray;
@property (nonatomic, copy) NSDictionary<NIMSession *, NIMStickTopSessionInfo *> * _Nonnull stickTopInfos;
@property (nonatomic, weak) id <ConversationViewModelDelegate> _Nullable delegate;
@property (nonatomic, readonly, strong) ConversationRepo * _Nonnull repo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)fetchServerSessionsWithOption:(NIMFetchServerSessionOption * _Nonnull)option :(void (^ _Nonnull)(NSError * _Nullable, NSArray<ConversationListModel *> * _Nullable))completion;
- (void)deleteRecentSessionWithRecentSession:(NIMRecentSession * _Nonnull)recentSession;
- (NIMStickTopSessionInfo * _Nullable)stickTopInfoForSessionWithSession:(NIMSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
- (void)addStickTopSessionWithSession:(NIMSession * _Nonnull)session :(void (^ _Nonnull)(NSError * _Nullable, NIMStickTopSessionInfo * _Nullable))completion;
- (void)removeStickTopSessionWithParams:(NIMStickTopSessionInfo * _Nonnull)params :(void (^ _Nonnull)(NSError * _Nullable, NIMStickTopSessionInfo * _Nullable))completion;
- (void)loadStickTopSessionInfos:(void (^ _Nonnull)(NSError * _Nullable, NSDictionary<NIMSession *, NIMStickTopSessionInfo *> * _Nullable))completion;
- (BOOL)notifyForNewMsgWithUserId:(NSString * _Nullable)userId SWIFT_WARN_UNUSED_RESULT;
- (NIMTeamNotifyState)notifyStateForNewMsgWithTeamId:(NSString * _Nullable)teamId SWIFT_WARN_UNUSED_RESULT;
- (void)sortRecentSession;
- (void)onRecvMessageReceipts:(NSArray<NIMMessageReceipt *> * _Nonnull)receipts;
- (void)onNotifyAddStickTopSession:(NIMStickTopSessionInfo * _Nonnull)newInfo;
- (void)onNotifyRemoveStickTopSession:(NIMStickTopSessionInfo * _Nonnull)removedInfo;
- (void)onNotifySyncStickTopSessions:(NIMSyncStickTopSessionResponse * _Nonnull)response;
- (void)didServerSessionUpdated:(NIMRecentSession * _Nullable)recentSession;
- (void)didAddRecentSession:(NIMRecentSession * _Nonnull)recentSession totalUnreadCount:(NSInteger)totalUnreadCount;
- (void)didUpdateRecentSession:(NIMRecentSession * _Nonnull)recentSession totalUnreadCount:(NSInteger)totalUnreadCount;
- (void)didRemoveRecentSession:(NIMRecentSession * _Nonnull)recentSession totalUnreadCount:(NSInteger)totalUnreadCount;
- (void)onFriendChanged:(NIMUser * _Nonnull)user;
- (void)onTeamUpdated:(NIMTeam * _Nonnull)team;
- (void)onTeamAdded:(NIMTeam * _Nonnull)team;
- (void)onTeamRemoved:(NIMTeam * _Nonnull)team;
- (void)onTeamMemberChanged:(NIMTeam * _Nonnull)team;
- (void)onMuteListChanged;
@end


SWIFT_PROTOCOL("_TtP19NEConversationUIKit29ConversationViewModelDelegate_")
@protocol ConversationViewModelDelegate <NSObject>
- (void)didAddRecentSession;
- (void)didUpdateRecentSessionWithIndex:(NSInteger)index;
- (void)reloadData;
- (void)reloadTableView;
@end

@class FunSearchView;
@class PopListItem;

SWIFT_CLASS("_TtC19NEConversationUIKit25FunConversationController")
@interface FunConversationController : NEBaseConversationController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) FunSearchView * _Nonnull searchView;
- (void)viewDidLoad;
- (void)setupSubviews;
- (NSArray<PopListItem *> * _Nonnull)getPopListItems SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC19NEConversationUIKit23FunConversationListCell")
@interface FunConversationListCell : NEBaseConversationListCell
- (void)setupSubviews;
- (void)configDataWithSessionModel:(ConversationListModel * _Nullable)sessionModel;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19NEConversationUIKit31FunConversationSearchController")
@interface FunConversationSearchController : NEBaseConversationSearchController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)setupSubviews;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end

@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC19NEConversationUIKit27NEBasePopListViewController")
@interface NEBasePopListViewController : UIViewController
@property (nonatomic, readonly, strong) UIView * _Nonnull shadowView;
@property (nonatomic) CGFloat buttonHeight;
@property (nonatomic) CGFloat popViewWidth;
@property (nonatomic) CGFloat popViewRadius;
@property (nonatomic) CGFloat topConstant;
@property (nonatomic, copy) NSArray<PopListItem *> * _Nonnull itemDatas;
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (void)removeSelf;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19NEConversationUIKit24FunPopListViewController")
@interface FunPopListViewController : NEBasePopListViewController
@property (nonatomic, strong) UIView * _Nonnull triangleView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NIMRevokeMessageNotification;

SWIFT_CLASS("_TtC19NEConversationUIKit18NEAtMessageManager")
@interface NEAtMessageManager : NSObject <NIMChatManagerDelegate, NIMLoginManagerDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NEAtMessageManager * _Nullable instance;)
+ (NEAtMessageManager * _Nullable)instance SWIFT_WARN_UNUSED_RESULT;
+ (void)setInstance:(NEAtMessageManager * _Nullable)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)setupInstance;
- (void)onLogin:(NIMLoginStep)step;
- (void)onRecvRevokeMessageNotification:(NIMRevokeMessageNotification * _Nonnull)notification;
- (BOOL)isAtCurrentUserWithSessionId:(NSString * _Nonnull)sessionId SWIFT_WARN_UNUSED_RESULT;
- (void)clearAtRecord:(NSString * _Nonnull)sessionId;
- (void)filterAtMessageWithMessages:(NSArray<NIMMessage *> * _Nonnull)messages;
- (void)removeRevokeAtMessageWithMessages:(NSArray<NIMMessage *> * _Nonnull)messages;
- (void)startFilterRoamingMessagesTask;
- (void)onRecvMessages:(NSArray<NIMMessage *> * _Nonnull)messages;
@end



@interface NEBaseConversationController (SWIFT_EXTENSION(NEConversationUIKit))
/// cell点击事件,可重写该事件处理自己的逻辑业务，例如跳转到指定的会话页面
/// \param sessionType 会话类型
///
/// \param sessionId 会话id
///
/// \param indexPath indexpath
///
- (void)onselectedTableRowWithSessionType:(NIMSessionType)sessionType sessionId:(NSString * _Nonnull)sessionId indexPath:(NSIndexPath * _Nonnull)indexPath;
/// 删除会话
/// \param model 会话模型
///
/// \param indexPath indexpath
///
- (void)didDeleteConversationCellWithModel:(ConversationListModel * _Nonnull)model indexPath:(NSIndexPath * _Nonnull)indexPath;
/// 删除一条置顶记录
/// \param model 会话模型
///
/// \param indexPath indexpath
///
- (void)didRemoveStickTopSessionWithModel:(ConversationListModel * _Nonnull)model indexPath:(NSIndexPath * _Nonnull)indexPath;
/// 添加一条置顶记录
/// \param model 会话模型
///
/// \param indexPath indexpath
///
- (void)didAddStickTopSessionWithModel:(ConversationListModel * _Nonnull)model indexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface NEBaseConversationController (SWIFT_EXTENSION(NEConversationUIKit)) <ConversationViewModelDelegate>
- (void)didAddRecentSession;
- (void)didUpdateRecentSessionWithIndex:(NSInteger)index;
- (void)reloadData;
- (void)reloadTableView;
@end

@class UITableViewRowAction;

@interface NEBaseConversationController (SWIFT_EXTENSION(NEConversationUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSArray<UITableViewRowAction *> * _Nullable)tableView:(UITableView * _Nonnull)tableView editActionsForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)deleteActionHandlerWithAction:(UITableViewRowAction * _Nullable)action indexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)topActionHandlerWithAction:(UITableViewRowAction * _Nullable)action indexPath:(NSIndexPath * _Nonnull)indexPath isTop:(BOOL)isTop;
@end


@interface NEBaseConversationController (SWIFT_EXTENSION(NEConversationUIKit)) <TabNavigationViewDelegate>
- (void)searchAction;
- (NEBasePopListViewController * _Nonnull)getPopListController SWIFT_WARN_UNUSED_RESULT;
- (NSArray<PopListItem *> * _Nonnull)getPopListItems SWIFT_WARN_UNUSED_RESULT;
- (void)didClickAddBtn;
- (void)createDiscussGroup;
- (void)createSeniorGroup;
- (void)onRecvRevokeMessageNotification:(NIMRevokeMessageNotification * _Nonnull)notification;
- (void)saveRevokeMessage:(NIMMessage * _Nonnull)message :(void (^ _Nonnull)(NSError * _Nullable))completion;
@end


SWIFT_PROTOCOL("_TtP19NEConversationUIKit36NEBaseConversationControllerDelegate_")
@protocol NEBaseConversationControllerDelegate
- (void)onDataLoaded;
@end





/// 头像枚举类型
typedef SWIFT_ENUM(NSInteger, NEConversationAvatarType, open) {
  NEConversationAvatarTypeRectangle = 1,
  NEConversationAvatarTypeCycle = 2,
};


SWIFT_CLASS("_TtC19NEConversationUIKit23NEKitConversationConfig")
@interface NEKitConversationConfig : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NEKitConversationConfig * _Nonnull shared;)
+ (NEKitConversationConfig * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) ConversationUIConfig * _Nonnull ui;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19NEConversationUIKit11PopListItem")
@interface PopListItem : NSObject
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, copy) NSString * _Nullable showName;
@property (nonatomic, strong) UIColor * _Nonnull showNameColor;
@property (nonatomic, copy) void (^ _Nullable completion)(void);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19NEConversationUIKit21PopListViewController")
@interface PopListViewController : NEBasePopListViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
