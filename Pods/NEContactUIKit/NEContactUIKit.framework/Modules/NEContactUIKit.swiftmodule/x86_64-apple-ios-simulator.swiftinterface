// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name NEContactUIKit
// swift-module-flags-ignorable: -enable-bare-slash-regex
import CoreMedia
import CoreText
import Foundation
import NEChatKit
@_exported import NECommonKit
@_exported import NECommonUIKit
@_exported import NEContactUIKit
import NECoreIMKit
import NECoreKit
@_exported import NIMSDK
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class BlackListCell : NEContactUIKit.NEBaseBlackListCell {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class BlackListViewController : NEContactUIKit.NEBaseBlackListViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override open func getContactSelectVC() -> NEContactUIKit.NEBaseContactsSelectedViewController
  @_Concurrency.MainActor(unsafe) @objc override public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers public class BlackListViewModel : ObjectiveC.NSObject, NECoreIMKit.FriendProviderDelegate {
  @objc weak public var delegate: NECoreIMKit.FriendProviderDelegate?
  @objc public func onFriendChanged(user: NECoreIMKit.User)
  @objc public func onUserInfoChanged(user: NECoreIMKit.User)
  @objc public func onBlackListChanged()
  @objc public func onRecieveNotification(notification: NECoreIMKit.XNotification)
  @objc public func onNotificationUnreadCountChanged(count: Swift.Int)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class CenterTextCell : UIKit.UITableViewCell {
  @objc @_Concurrency.MainActor(unsafe) public var titleLabel: UIKit.UILabel
  @objc @_Concurrency.MainActor(unsafe) public var line: UIKit.UIView
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class ContactBaseTextCell : UIKit.UITableViewCell {
  @objc @_Concurrency.MainActor(unsafe) public var titleLabel: UIKit.UILabel
  @objc @_Concurrency.MainActor(unsafe) public var line: UIKit.UIView
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc public protocol ContactCellDataProtrol : ObjectiveC.NSObjectProtocol {
  @objc func setModel(_ model: NEContactUIKit.ContactInfo)
}
@objc public enum ContactCellType : Swift.Int {
  case ContactOthers = 1
  case ContactPerson = 2
  case ContactCutom = 50
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public typealias ContactsSelectCompletion = ([NEContactUIKit.ContactInfo]) -> Swift.Void?
public let ModuleName: Swift.String
@_hasMissingDesignatedInitializers @objcMembers public class ContactGroup {
  @objc deinit
}
@_hasMissingDesignatedInitializers @objcMembers open class ContactHeadItem {
  @objc public var name: Swift.String?
  @objc public var imageName: Swift.String?
  @objc public var color: UIKit.UIColor
  @objc public var router: Swift.String
  @objc deinit
}
extension UIKit.UIImage {
  public class func ne_imageNamed(name: Swift.String?) -> UIKit.UIImage?
}
@objc @_inheritsConvenienceInitializers @objcMembers open class ContactInfo : ObjectiveC.NSObject {
  @objc public var user: NECoreIMKit.User?
  @objc public var contactCellType: Swift.Int
  @objc public var router: Swift.String
  @objc public var isSelected: Swift.Bool
  @objc public var headerBackColor: UIKit.UIColor?
  @objc public var localExtension: [Swift.String : Any]?
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class ContactRemakNameViewController : NEContactUIKit.NEBaseContactRemakNameViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_hasMissingDesignatedInitializers @objcMembers open class ContactSection {
  @objc public var initial: Swift.String
  @objc public var contacts: [NEContactUIKit.ContactInfo]
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class ContactSectionView : UIKit.UITableViewHeaderFooterView {
  @objc @_Concurrency.MainActor(unsafe) public var titleLabel: UIKit.UILabel
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class ContactSelectedCell : NEContactUIKit.NEBaseContactSelectedCell {
  @_Concurrency.MainActor(unsafe) @objc override open func commonUI()
  @_Concurrency.MainActor(unsafe) @objc override open func setConfig()
  @_Concurrency.MainActor(unsafe) @objc override open func setupCommonCircleHeader()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class ContactsSelectedViewController : NEContactUIKit.NEBaseContactsSelectedViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override open func setupUI()
  @_Concurrency.MainActor(unsafe) @objc override open func setupNavRightItem()
  @_Concurrency.MainActor(unsafe) @objc override open func tableView(_ tableView: UIKit.UITableView, viewForHeaderInSection section: Swift.Int) -> UIKit.UIView?
  @_Concurrency.MainActor(unsafe) @objc override open func collectionView(_ collectionView: UIKit.UICollectionView, cellForItemAt indexPath: Foundation.IndexPath) -> UIKit.UICollectionViewCell
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class ContactsViewController : NEContactUIKit.NEBaseContactsViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override open func commonUI()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func getFindFriendViewController() -> NEContactUIKit.NEBaseFindFriendViewController
  @_Concurrency.MainActor(unsafe) @objc override open func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc deinit
}
extension NEContactUIKit.ContactsViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func initSystemNav()
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class ContactTableViewCell : NEContactUIKit.NEBaseContactTableViewCell {
  @_Concurrency.MainActor(unsafe) @objc override open func setConfig()
  @_Concurrency.MainActor(unsafe) @objc override open func commonUI()
  @_Concurrency.MainActor(unsafe) @objc override open func setupCommonCircleHeader()
  @_Concurrency.MainActor(unsafe) @objc override open func setModel(_ model: NEContactUIKit.ContactInfo)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc public enum NEContactAvatarType : Swift.Int {
  case rectangle = 1
  case cycle
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers @objcMembers public class ContactUIConfig : ObjectiveC.NSObject {
  @objc public var title: Swift.String?
  @objc public var titleColor: UIKit.UIColor?
  @objc public var showTitleBar: Swift.Bool
  @objc public var showTitleBarRight2Icon: Swift.Bool
  @objc public var showTitleBarRightIcon: Swift.Bool
  @objc public var titleBarRightRes: UIKit.UIImage?
  @objc public var titleBarRight2Res: UIKit.UIImage?
  @objc public var titleBarRightClick: (() -> Swift.Void)?
  @objc public var titleBarRight2Click: (() -> Swift.Void)?
  @objc public var showHeader: Swift.Bool
  public var headerData: (([NEContactUIKit.ContactHeadItem]) -> Swift.Void)?
  @objc public var headerItemClick: ((NEContactUIKit.ContactInfo, Foundation.IndexPath) -> Swift.Void)?
  @objc public var friendItemClick: ((NEContactUIKit.ContactInfo, Foundation.IndexPath) -> Swift.Void)?
  @objc public var contactProperties: NEContactUIKit.ContactProperties
  @objc public var customController: ((NEContactUIKit.NEBaseContactsViewController) -> Swift.Void)?
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class ContactProperties : ObjectiveC.NSObject {
  @objc public var avatarCornerRadius: Swift.Double
  public var avatarType: NEContactUIKit.NEContactAvatarType?
  @objc public var itemTitleSize: CoreFoundation.CGFloat
  @objc public var itemTitleColor: UIKit.UIColor
  @objc public var divideLineColor: UIKit.UIColor
  @objc public var indexTitleColor: UIKit.UIColor?
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class ContactUnCheckCell : NEContactUIKit.NEBaseContactUnCheckCell {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class ContactUserViewController : NEContactUIKit.NEBaseContactUserViewController {
  @_Concurrency.MainActor(unsafe) @objc override public init(user: NECoreIMKit.User?)
  @_Concurrency.MainActor(unsafe) @objc override public init(uid: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override open func commonUI()
  @_Concurrency.MainActor(unsafe) @objc override public func getContactRemakNameViewController() -> NEContactUIKit.NEBaseContactRemakNameViewController
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class ContactUserViewModel : ObjectiveC.NSObject {
  @objc public func deleteFriend(account: Swift.String, _ completion: @escaping (Foundation.NSError?) -> Swift.Void)
  @objc public func isFriend(account: Swift.String) -> Swift.Bool
  @objc public func isBlack(account: Swift.String) -> Swift.Bool
  @objc public func removeBlackList(account: Swift.String, _ completion: @escaping (Foundation.NSError?) -> Swift.Void)
  @objc public func update(_ user: NECoreIMKit.User, _ completion: @escaping (Swift.Error?) -> Swift.Void)
  @objc public func getUserInfo(_ uid: Swift.String, _ completion: @escaping (Swift.Error?, NECoreIMKit.User?) -> Swift.Void)
  @objc public func fetchUserInfo(accountList: [Swift.String], _ completion: @escaping ([NECoreIMKit.User]?, Foundation.NSError?) -> Swift.Void)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @objcMembers public class ContactViewModel : ObjectiveC.NSObject, NEChatKit.ContactRepoSystemNotiDelegate {
  public var contacts: [NEContactUIKit.ContactSection]
  @objc public var indexs: [Swift.String]?
  @objc public var contactRepo: NEChatKit.ContactRepo
  @objc public func onNotificationUnreadCountChanged(_ count: Swift.Int)
  @objc public func onRecieveNotification(_ notification: NECoreIMKit.XNotification)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FindFriendViewController : NEContactUIKit.NEBaseFindFriendViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class FindFriendViewModel : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunBlackListViewController : NEContactUIKit.NEBaseBlackListViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc override public func getContactSelectVC() -> NEContactUIKit.NEBaseContactsSelectedViewController
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunContactRemakNameViewController : NEContactUIKit.NEBaseContactRemakNameViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension NEContactUIKit.ContactRouter {
  @objc public static func registerFun()
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunContactSelectedCell : NEContactUIKit.NEBaseContactSelectedCell {
  @_Concurrency.MainActor(unsafe) @objc override open func setupCommonCircleHeader()
  @_Concurrency.MainActor(unsafe) @objc override open func commonUI()
  @_Concurrency.MainActor(unsafe) @objc override open func initSubviewsLayout()
  @_Concurrency.MainActor(unsafe) @objc override open func setConfig()
  @_Concurrency.MainActor(unsafe) @objc override open func setModel(_ model: NEContactUIKit.ContactInfo)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunContactsSelectedViewController : NEContactUIKit.NEBaseContactsSelectedViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override open func setupUI()
  @_Concurrency.MainActor(unsafe) @objc override open func setupNavRightItem()
  @_Concurrency.MainActor(unsafe) @objc override open func tableView(_ tableView: UIKit.UITableView, viewForHeaderInSection section: Swift.Int) -> UIKit.UIView?
  @_Concurrency.MainActor(unsafe) @objc override open func collectionView(_ collectionView: UIKit.UICollectionView, cellForItemAt indexPath: Foundation.IndexPath) -> UIKit.UICollectionViewCell
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunContactsViewController : NEContactUIKit.NEBaseContactsViewController {
  @objc @_Concurrency.MainActor(unsafe) public var searchView: NECommonUIKit.FunSearchView {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override open func commonUI()
  @_Concurrency.MainActor(unsafe) @objc override open func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc override open func tableView(_ tableView: UIKit.UITableView, viewForHeaderInSection section: Swift.Int) -> UIKit.UIView?
  @_Concurrency.MainActor(unsafe) @objc override open func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func getFindFriendViewController() -> NEContactUIKit.NEBaseFindFriendViewController
}
extension NEContactUIKit.FunContactsViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func initSystemNav()
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunContactTableViewCell : NEContactUIKit.NEBaseContactTableViewCell {
  @_Concurrency.MainActor(unsafe) @objc override open func setupCommonCircleHeader()
  @_Concurrency.MainActor(unsafe) @objc override open func commonUI()
  @_Concurrency.MainActor(unsafe) @objc override open func initSubviewsLayout()
  @_Concurrency.MainActor(unsafe) @objc override open func setConfig()
  @_Concurrency.MainActor(unsafe) @objc override open func setModel(_ model: NEContactUIKit.ContactInfo)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension UIKit.UIColor {
  public static let funContactThemeColor: UIKit.UIColor
  public static let funContactBackgroundColor: UIKit.UIColor
  public static let funContactLineBorderColor: UIKit.UIColor
  public static let funContactUserViewChatTitleTextColor: UIKit.UIColor
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunContactUnCheckCell : NEContactUIKit.NEBaseContactUnCheckCell {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunContactUserViewController : NEContactUIKit.NEBaseContactUserViewController {
  @_Concurrency.MainActor(unsafe) @objc override public init(user: NECoreIMKit.User?)
  @_Concurrency.MainActor(unsafe) @objc override public init(uid: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override open func commonUI()
  @_Concurrency.MainActor(unsafe) @objc override open func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override public func getContactRemakNameViewController() -> NEContactUIKit.NEBaseContactRemakNameViewController
  @_Concurrency.MainActor(unsafe) @objc override public func deleteFriend(user: NECoreIMKit.User?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) open class FunFindFriendViewController : NEContactUIKit.NEBaseFindFriendViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override open func setupUI()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunSystemNotificationCell : NEContactUIKit.NEBaseSystemNotificationCell {
  @_Concurrency.MainActor(unsafe) @objc override open func setupCommonCircleHeader()
  @_Concurrency.MainActor(unsafe) @objc override open func setupUI()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunTeamListViewController : NEContactUIKit.NEBaseTeamListViewController {
  @_Concurrency.MainActor(unsafe) @objc override public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunTeamTableViewCell : NEContactUIKit.NEBaseTeamTableViewCell {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunUserInfoHeaderView : NEContactUIKit.NEBaseUserInfoHeaderView {
  @_Concurrency.MainActor(unsafe) @objc override public func commonUI()
  @_Concurrency.MainActor(unsafe) @objc override public func setData(user: NECoreIMKit.User?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class FunValidationMessageViewController : NEContactUIKit.NEBaseValidationMessageViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override open func setupUI()
  @objc deinit
}
extension NEContactUIKit.FunValidationMessageViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseBlackListCell : NEContactUIKit.NEBaseTeamTableViewCell {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override public func setModel(_ model: Any)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseBlackListViewController : UIKit.UIViewController, UIKit.UITableViewDelegate, UIKit.UITableViewDataSource, UIKit.UIGestureRecognizerDelegate {
  @objc @_Concurrency.MainActor(unsafe) final public let navigationView: NECommonUIKit.NENavigationView
  @objc @_Concurrency.MainActor(unsafe) public var blackList: [NECoreIMKit.User]?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc @_Concurrency.MainActor(unsafe) open func getContactSelectVC() -> NEContactUIKit.NEBaseContactsSelectedViewController
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension NEContactUIKit.NEBaseBlackListViewController : NECoreIMKit.FriendProviderDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func onFriendChanged(user: NECoreIMKit.User)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func onUserInfoChanged(user: NECoreIMKit.User)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func onBlackListChanged()
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseContactRemakNameViewController : NEContactUIKit.NEBaseContactViewController, UIKit.UITextFieldDelegate {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @objc @_Concurrency.MainActor(unsafe) public func textFieldChange()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class ContactRouter : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseContactSelectedCell : NEContactUIKit.NEBaseContactTableViewCell {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func awakeFromNib()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func setSelected(_ selected: Swift.Bool, animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override open func commonUI()
  @_Concurrency.MainActor(unsafe) @objc override public func setModel(_ model: NEContactUIKit.ContactInfo)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseContactsSelectedViewController : NEContactUIKit.NEBaseContactViewController, UIKit.UICollectionViewDelegate, UIKit.UICollectionViewDataSource, UIKit.UICollectionViewDelegateFlowLayout, UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @_Concurrency.MainActor(unsafe) public var callBack: NEContactUIKit.ContactsSelectCompletion?
  @objc @_Concurrency.MainActor(unsafe) public var filterUsers: Swift.Set<Swift.String>?
  @objc @_Concurrency.MainActor(unsafe) public var limit: Swift.Int
  @objc @_Concurrency.MainActor(unsafe) public var userId: Swift.String?
  @objc @_Concurrency.MainActor(unsafe) public var selectArray: [NEContactUIKit.ContactInfo]
  @objc @_Concurrency.MainActor(unsafe) final public let selectDic: [Swift.String : NEContactUIKit.ContactInfo]
  @objc @_Concurrency.MainActor(unsafe) public var collectionBackView: UIKit.UIView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var collection: UIKit.UICollectionView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var sureBtn: UIKit.UIButton
  @objc @_Concurrency.MainActor(unsafe) public var customCells: [Swift.Int : NEContactUIKit.NEBaseContactTableViewCell.Type]
  @objc @_Concurrency.MainActor(unsafe) final public let viewModel: NEContactUIKit.ContactViewModel
  @objc @_Concurrency.MainActor(unsafe) public var tableView: UIKit.UITableView {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @objc @_Concurrency.MainActor(unsafe) open func setupUI()
  @objc @_Concurrency.MainActor(unsafe) open func setupNavRightItem()
  @objc @_Concurrency.MainActor(unsafe) open func sureClick(_ sender: UIKit.UIButton)
  @_Concurrency.MainActor(unsafe) @objc open func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, viewForHeaderInSection section: Swift.Int) -> UIKit.UIView?
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, heightForHeaderInSection section: Swift.Int) -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @_Concurrency.MainActor(unsafe) @objc open func sectionIndexTitles(for tableView: UIKit.UITableView) -> [Swift.String]?
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, sectionForSectionIndexTitle title: Swift.String, at index: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc open func collectionView(_ collectionView: UIKit.UICollectionView, numberOfItemsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc open func collectionView(_ collectionView: UIKit.UICollectionView, didSelectItemAt indexPath: Foundation.IndexPath)
  @_Concurrency.MainActor(unsafe) @objc open func collectionView(_ collectionView: UIKit.UICollectionView, cellForItemAt indexPath: Foundation.IndexPath) -> UIKit.UICollectionViewCell
  @_Concurrency.MainActor(unsafe) @objc open func collectionView(_ collectionView: UIKit.UICollectionView, layout collectionViewLayout: UIKit.UICollectionViewLayout, sizeForItemAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGSize
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc public protocol NEBaseContactsViewControllerDelegate {
  @objc func onDataLoaded()
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseContactsViewController : UIKit.UIViewController, UIKit.UITableViewDelegate, UIKit.UITableViewDataSource, NECoreIMKit.SystemMessageProviderDelegate, NECoreIMKit.FriendProviderDelegate, NECommonUIKit.TabNavigationViewDelegate {
  @objc @_Concurrency.MainActor(unsafe) public var delegate: NEContactUIKit.NEBaseContactsViewControllerDelegate?
  @objc @_Concurrency.MainActor(unsafe) public var cellRegisterDic: [Swift.Int : NEContactUIKit.NEBaseContactTableViewCell.Type]
  @objc @_Concurrency.MainActor(unsafe) public var viewModel: NEContactUIKit.ContactViewModel
  @objc @_Concurrency.MainActor(unsafe) public var bodyTopViewHeight: CoreFoundation.CGFloat {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var bodyBottomViewHeight: CoreFoundation.CGFloat {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var topConstant: CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @objc deinit
  @objc @_Concurrency.MainActor(unsafe) open func showTitleBar()
  @objc @_Concurrency.MainActor(unsafe) open func commonUI()
  @objc @_Concurrency.MainActor(unsafe) public var navigationView: NECommonUIKit.TabNavigationView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var bodyTopView: UIKit.UIView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var bodyView: UIKit.UIView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var contentView: UIKit.UIView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var tableView: UIKit.UITableView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var bodyBottomView: UIKit.UIView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) open func loadData()
  @_Concurrency.MainActor(unsafe) @objc open func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc @_Concurrency.MainActor(unsafe) open func configCell(info: NEContactUIKit.ContactInfo, _ cell: NEContactUIKit.NEBaseContactTableViewCell, _ indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, viewForHeaderInSection section: Swift.Int) -> UIKit.UIView?
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, heightForHeaderInSection section: Swift.Int) -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc open func sectionIndexTitles(for tableView: UIKit.UITableView) -> [Swift.String]?
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, sectionForSectionIndexTitle title: Swift.String, at index: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc @_Concurrency.MainActor(unsafe) open func onRecieveNotification(notification: NECoreIMKit.XNotification)
  @objc @_Concurrency.MainActor(unsafe) open func onNotificationUnreadCountChanged(count: Swift.Int)
  @_Concurrency.MainActor(unsafe) @objc open func onFriendChanged(user: NECoreIMKit.User)
  @_Concurrency.MainActor(unsafe) @objc open func onBlackListChanged()
  @_Concurrency.MainActor(unsafe) @objc open func onUserInfoChanged(user: NECoreIMKit.User)
  @objc @_Concurrency.MainActor(unsafe) open func onReceive(_ notification: NIMCustomSystemNotification)
}
extension NEContactUIKit.NEBaseContactsViewController {
  @objc @_Concurrency.MainActor(unsafe) dynamic open func initSystemNav()
  @objc @_Concurrency.MainActor(unsafe) dynamic open func getFindFriendViewController() -> NEContactUIKit.NEBaseFindFriendViewController
  @objc @_Concurrency.MainActor(unsafe) dynamic public func goToFindFriend()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func searchContact()
  @_Concurrency.MainActor(unsafe) @objc dynamic open func searchAction()
  @_Concurrency.MainActor(unsafe) @objc dynamic open func didClickAddBtn()
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseContactTableViewCell : NEContactUIKit.NEBaseContactViewCell, NEContactUIKit.ContactCellDataProtrol {
  @objc @_Concurrency.MainActor(unsafe) public var arrow: UIKit.UIImageView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var bottomLine: UIKit.UIView {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc @_Concurrency.MainActor(unsafe) open func commonUI()
  @objc @_Concurrency.MainActor(unsafe) open func initSubviewsLayout()
  @objc @_Concurrency.MainActor(unsafe) open func setConfig()
  @_Concurrency.MainActor(unsafe) @objc open func setModel(_ model: NEContactUIKit.ContactInfo)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseContactUnCheckCell : UIKit.UICollectionViewCell {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseContactUserViewController : NEContactUIKit.NEBaseContactViewController, UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @objc @_Concurrency.MainActor(unsafe) public var isBlack: Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) final public let viewModel: NEContactUIKit.ContactUserViewModel
  @objc @_Concurrency.MainActor(unsafe) public var tableView: UIKit.UITableView
  @objc @_Concurrency.MainActor(unsafe) public var headerView: NEContactUIKit.NEBaseUserInfoHeaderView
  @objc @_Concurrency.MainActor(unsafe) public init(user: NECoreIMKit.User?)
  @objc @_Concurrency.MainActor(unsafe) public init(uid: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @objc @_Concurrency.MainActor(unsafe) open func commonUI()
  @_Concurrency.MainActor(unsafe) @objc open func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc public func tableView(_ tableView: UIKit.UITableView, heightForHeaderInSection section: Swift.Int) -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc public func tableView(_ tableView: UIKit.UITableView, viewForHeaderInSection section: Swift.Int) -> UIKit.UIView?
  @_Concurrency.MainActor(unsafe) @objc public func tableView(_ tableView: UIKit.UITableView, heightForFooterInSection section: Swift.Int) -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc public func tableView(_ tableView: UIKit.UITableView, viewForFooterInSection section: Swift.Int) -> UIKit.UIView?
  @_Concurrency.MainActor(unsafe) @objc open func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @objc @_Concurrency.MainActor(unsafe) open func getContactRemakNameViewController() -> NEContactUIKit.NEBaseContactRemakNameViewController
  @objc @_Concurrency.MainActor(unsafe) open func deleteFriend(user: NECoreIMKit.User?)
  @objc deinit
}
extension NEContactUIKit.NEBaseContactUserViewController : NIMSystemNotificationManagerDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic open func onReceive(_ notification: NIMSystemNotification)
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseContactViewCell : UIKit.UITableViewCell {
  @objc @_Concurrency.MainActor(unsafe) public var avatarImage: UIKit.UIImageView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var redAngleView: NECommonUIKit.RedAngleLabel {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var nameLabel: UIKit.UILabel {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var titleLabel: UIKit.UILabel {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var optionLabel: UIKit.UILabel {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func awakeFromNib()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func setSelected(_ selected: Swift.Bool, animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc @_Concurrency.MainActor(unsafe) open func setupCommonCircleHeader()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseContactViewController : UIKit.UIViewController, UIKit.UIGestureRecognizerDelegate {
  @objc @_Concurrency.MainActor(unsafe) final public let navigationView: NECommonUIKit.NENavigationView
  @objc @_Concurrency.MainActor(unsafe) public var emptyView: NECommonUIKit.NEEmptyDataView {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @objc @_Concurrency.MainActor(unsafe) open func setupBackUI()
  @objc @_Concurrency.MainActor(unsafe) open func backToPrevious()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseFindFriendViewController : NEContactUIKit.NEBaseContactViewController, UIKit.UITextFieldDelegate {
  @objc @_Concurrency.MainActor(unsafe) final public let viewModel: NEContactUIKit.FindFriendViewModel
  @objc @_Concurrency.MainActor(unsafe) final public let hasRequest: Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) final public let searchInput: UIKit.UITextField
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @objc @_Concurrency.MainActor(unsafe) open func setupUI()
  @_Concurrency.MainActor(unsafe) @objc public func textFieldShouldReturn(_ textField: UIKit.UITextField) -> Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) open func startSearch(_ text: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseSystemNotificationCell : NEContactUIKit.NEBaseValidationCell {
  @_Concurrency.MainActor(unsafe) weak public var delegate: NEContactUIKit.SystemNotificationCellDelegate?
  @_Concurrency.MainActor(unsafe) @objc dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override open func setupUI()
  @_Concurrency.MainActor(unsafe) @objc override open func confige(_ model: NECoreIMKit.XNotification)
  @objc @_Concurrency.MainActor(unsafe) public var rejectBtn: NECommonUIKit.ExpandButton
  @objc @_Concurrency.MainActor(unsafe) public var agreeBtn: NECommonUIKit.ExpandButton
  @objc @_Concurrency.MainActor(unsafe) public var resultImage: UIKit.UIImageView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var resultLabel: UIKit.UILabel {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) open func rejectClick(_ sender: UIKit.UIButton)
  @objc @_Concurrency.MainActor(unsafe) open func agreeClick(_ sender: UIKit.UIButton)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseTeamListViewController : UIKit.UIViewController, UIKit.UITableViewDelegate, UIKit.UITableViewDataSource, UIKit.UIGestureRecognizerDelegate {
  @objc @_Concurrency.MainActor(unsafe) final public let navigationView: NECommonUIKit.NENavigationView
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseTeamTableViewCell : UIKit.UITableViewCell {
  @objc @_Concurrency.MainActor(unsafe) public var avatarImage: UIKit.UIImageView
  @objc @_Concurrency.MainActor(unsafe) public var nameLabel: UIKit.UILabel
  @objc @_Concurrency.MainActor(unsafe) public var titleLabel: UIKit.UILabel
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc @_Concurrency.MainActor(unsafe) public func setModel(_ model: Any)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseUserInfoHeaderView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public var labelConstraints: [UIKit.NSLayoutConstraint]
  @objc @_Concurrency.MainActor(unsafe) public var avatarImage: UIKit.UIImageView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var nameLabel: UIKit.UILabel {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var titleLabel: UIKit.UILabel {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var detailLabel: UIKit.UILabel {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var detailLabel2: UIKit.UILabel {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc @_Concurrency.MainActor(unsafe) open func commonUI()
  @objc @_Concurrency.MainActor(unsafe) open func setData(user: NECoreIMKit.User?)
  @objc deinit
}
public protocol SystemNotificationCellDelegate : AnyObject {
  func onAccept(_ notifiModel: NECoreIMKit.XNotification)
  func onRefuse(_ notifiModel: NECoreIMKit.XNotification)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseValidationCell : NEContactUIKit.NEBaseContactViewCell {
  @objc @_Concurrency.MainActor(unsafe) public var titleLabelRightMargin: UIKit.NSLayoutConstraint?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func awakeFromNib()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func setSelected(_ selected: Swift.Bool, animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc @_Concurrency.MainActor(unsafe) open func setupUI()
  @objc @_Concurrency.MainActor(unsafe) open func confige(_ model: NECoreIMKit.XNotification)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class NEBaseValidationMessageViewController : NEContactUIKit.NEBaseContactViewController {
  @objc @_Concurrency.MainActor(unsafe) final public let viewModel: NEContactUIKit.ValidationMessageViewModel
  @objc @_Concurrency.MainActor(unsafe) final public let tableView: UIKit.UITableView
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override open func backToPrevious()
  @objc @_Concurrency.MainActor(unsafe) open func setupUI()
  @_Concurrency.MainActor(unsafe) @objc public func gestureRecognizerShouldBegin(_ gestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension NEContactUIKit.NEBaseValidationMessageViewController : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @_Concurrency.MainActor(unsafe) @objc dynamic open func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc dynamic open func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc dynamic open func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGFloat
}
extension NEContactUIKit.NEBaseValidationMessageViewController : NEContactUIKit.SystemNotificationCellDelegate {
  @_Concurrency.MainActor(unsafe) public func changeValidationStatus(notifiModel: NECoreIMKit.XNotification, notiStatus: NECoreIMKit.IMHandleStatus)
  @objc @_Concurrency.MainActor(unsafe) dynamic open func onAccept(_ notifiModel: NECoreIMKit.XNotification)
  @objc @_Concurrency.MainActor(unsafe) dynamic open func onRefuse(_ notifiModel: NECoreIMKit.XNotification)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class NEKitContactConfig : ObjectiveC.NSObject {
  @objc public static let shared: NEContactUIKit.NEKitContactConfig
  @objc public var ui: NEContactUIKit.ContactUIConfig
  @objc override dynamic public init()
  @objc deinit
}
extension NEContactUIKit.ContactRouter {
  @objc public static func register()
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class SystemNotificationCell : NEContactUIKit.NEBaseSystemNotificationCell {
  @_Concurrency.MainActor(unsafe) @objc override open func setupCommonCircleHeader()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class TeamListViewController : NEContactUIKit.NEBaseTeamListViewController {
  @_Concurrency.MainActor(unsafe) @objc override public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class TeamListViewModel : ObjectiveC.NSObject, NIMTeamManagerDelegate {
  @objc public var teamList: [NECoreIMKit.Team]
  @objc override dynamic public init()
  @objc deinit
  @objc public func onTeamAdded(_ team: NIMTeam)
  @objc public func onTeamUpdated(_ team: NIMTeam)
  @objc public func onTeamRemoved(_ team: NIMTeam)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class TeamTableViewCell : NEContactUIKit.NEBaseTeamTableViewCell {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class TextWithDetailTextCell : NEContactUIKit.ContactBaseTextCell {
  @objc @_Concurrency.MainActor(unsafe) public var detailTitleLabel: UIKit.UILabel
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class TextWithRightArrowCell : NEContactUIKit.ContactBaseTextCell {
  @objc @_Concurrency.MainActor(unsafe) public var arrowImage: UIKit.UIImageView
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public typealias ValueChangeBlock = (_ title: Swift.String?, _ value: Swift.Bool) -> Swift.Void
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class TextWithSwitchCell : NEContactUIKit.ContactBaseTextCell {
  @objc @_Concurrency.MainActor(unsafe) public var block: NEContactUIKit.ValueChangeBlock?
  @objc @_Concurrency.MainActor(unsafe) public var switchButton: UIKit.UISwitch
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class UserInfoHeaderView : NEContactUIKit.NEBaseUserInfoHeaderView {
  @_Concurrency.MainActor(unsafe) @objc override public func commonUI()
  @_Concurrency.MainActor(unsafe) @objc override public func setData(user: NECoreIMKit.User?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) open class ValidationMessageViewController : NEContactUIKit.NEBaseValidationMessageViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override open func setupUI()
  @objc deinit
}
extension NEContactUIKit.ValidationMessageViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers public class ValidationMessageViewModel : ObjectiveC.NSObject, NEChatKit.ContactRepoSystemNotiDelegate {
  @objc public func onNotificationUnreadCountChanged(_ count: Swift.Int)
  @objc public func onRecieveNotification(_ notification: NECoreIMKit.XNotification)
  @objc public func acceptInviteWithTeam(_ teamId: Swift.String, _ invitorId: Swift.String, _ completion: @escaping (Swift.Error?) -> Swift.Void)
  @objc public func rejectInviteWithTeam(_ teamId: Swift.String, _ invitorId: Swift.String, _ completion: @escaping (Swift.Error?) -> Swift.Void)
  @objc deinit
}
extension NEContactUIKit.ContactCellType : Swift.Equatable {}
extension NEContactUIKit.ContactCellType : Swift.Hashable {}
extension NEContactUIKit.ContactCellType : Swift.RawRepresentable {}
extension NEContactUIKit.NEContactAvatarType : Swift.Equatable {}
extension NEContactUIKit.NEContactAvatarType : Swift.Hashable {}
extension NEContactUIKit.NEContactAvatarType : Swift.RawRepresentable {}
